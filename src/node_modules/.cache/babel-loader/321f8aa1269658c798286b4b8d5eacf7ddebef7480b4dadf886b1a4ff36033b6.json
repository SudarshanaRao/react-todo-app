{"ast":null,"code":"// src/redux/reducers.js\nconst initialState = {\n  tasks: []\n};\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n    case 'DELETE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.filter((_, index) => index !== action.payload)\n      };\n    case 'EDIT_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map((task, index) => index === action.payload.index ? {\n          ...task,\n          task: action.payload.newTask\n        } : task)\n      };\n    case 'TOGGLE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map((task, index) => index === action.payload ? {\n          ...task,\n          completed: !task.completed\n        } : task)\n      };\n    default:\n      return state;\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["initialState","tasks","taskReducer","state","action","type","payload","filter","_","index","map","task","newTask","completed"],"sources":["C:/Users/pandu/OneDrive/Desktop/Frontend Assignment/react-todo-app/src/redux/reducers.js"],"sourcesContent":["// src/redux/reducers.js\r\nconst initialState = {\r\n    tasks: [],\r\n  };\r\n  \r\n  const taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_TASK':\r\n        return { ...state, tasks: [...state.tasks, action.payload] };\r\n      case 'DELETE_TASK':\r\n        return {\r\n          ...state,\r\n          tasks: state.tasks.filter((_, index) => index !== action.payload),\r\n        };\r\n      case 'EDIT_TASK':\r\n        return {\r\n          ...state,\r\n          tasks: state.tasks.map((task, index) =>\r\n            index === action.payload.index\r\n              ? { ...task, task: action.payload.newTask }\r\n              : task\r\n          ),\r\n        };\r\n      case 'TOGGLE_TASK':\r\n        return {\r\n          ...state,\r\n          tasks: state.tasks.map((task, index) =>\r\n            index === action.payload\r\n              ? { ...task, completed: !task.completed }\r\n              : task\r\n          ),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default taskReducer;\r\n  "],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QAAE,GAAGF,KAAK;QAAEF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAEG,MAAM,CAACE,OAAO;MAAE,CAAC;IAC9D,KAAK,aAAa;MAChB,OAAO;QACL,GAAGH,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACM,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKL,MAAM,CAACE,OAAO;MAClE,CAAC;IACH,KAAK,WAAW;MACd,OAAO;QACL,GAAGH,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEF,KAAK,KACjCA,KAAK,KAAKL,MAAM,CAACE,OAAO,CAACG,KAAK,GAC1B;UAAE,GAAGE,IAAI;UAAEA,IAAI,EAAEP,MAAM,CAACE,OAAO,CAACM;QAAQ,CAAC,GACzCD,IACN;MACF,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGR,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEF,KAAK,KACjCA,KAAK,KAAKL,MAAM,CAACE,OAAO,GACpB;UAAE,GAAGK,IAAI;UAAEE,SAAS,EAAE,CAACF,IAAI,CAACE;QAAU,CAAC,GACvCF,IACN;MACF,CAAC;IACH;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}